{"version":3,"sources":["helpers/getBreeds.js","components/Error.js","components/Select.js","components/Spinner.js","components/Card.js","helpers/getDog.js","App.js","index.js"],"names":["getBreeds","a","fetch","res","ok","url","status","statusText","Error","json","data","error","className","initialBreeds","id","name","Select","updateDog","useState","breeds","setbreeds","seterror","useEffect","updateBreed","breedId","then","newbreeds","catch","console","log","onChange","e","target","value","map","val","Spinner","Card","dog","loading","onClick","breed","src","image","alt","getDog","initialDog","App","setdog","setLoading","setError","breeId","newdog","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7aecf372.chunk.js","sourcesContent":["const getBreeds = async () => {\r\n    const url = \"https://api.thedogapi.com/v1/breeds\";\r\n    const res = await fetch(url);\r\n  \r\n    if (!res.ok) {\r\n      const { url, status, statusText } = res;\r\n      throw Error(`Error: ${status} ${statusText} in fetch  ${url}`);\r\n    }\r\n  \r\n    const data = await res.json();\r\n  \r\n    return data;\r\n  };\r\n  \r\n  export default getBreeds;\r\n  ","import React from 'react'\r\n\r\nconst Error = ({error}) => {\r\n    return (\r\n        <div className=\"error\">\r\n            {error}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getBreeds from \"../helpers/getBreeds\";\r\nimport Error  from './Error'\r\n\r\nconst initialBreeds = [\r\n  {\r\n    id: 1,\r\n    name: \"Boxer\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Husky\",\r\n  },\r\n];\r\n\r\nconst Select = ({updateDog}) => {\r\n  const [breeds, setbreeds] = useState(initialBreeds);\r\n  const [error, seterror] = useState(null)\r\n  useEffect(() => {\r\n    updateBreed();\r\n  }, []);\r\n\r\n  const updateBreed = (breedId) => {\r\n    getBreeds(breedId).then((newbreeds) => {\r\n      setbreeds(newbreeds);\r\n    })\r\n    .catch((error)=>{\r\n      console.log(error)\r\n      seterror('Error al Cargar las Razas')\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <select onChange={(e)=>updateDog(e.target.value)}>\r\n      {breeds.map((val) => (\r\n        <option value={val.id} key={val.id}>\r\n          {val.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    {error && <Error error={error}/>}\r\n    \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React from \"react\";\r\nimport '../Styles/Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport Spinner from './Spinner'\r\n\r\nconst Card = ({ dog, updateDog,loading }) => {\r\n  if(loading) return <Spinner/>\r\n  return (\r\n    <div className=\"card\">\r\n      <img onClick={() => updateDog(dog.breed.id)} src={dog.image} alt=\"dog\" />\r\n      <p>{dog.breed.name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const getDog = async (breedId) => {\r\n    const url =\r\n      !breedId || breedId === 0\r\n        ? \"https://api.thedogapi.com/v1/images/search\"\r\n        : `https://api.TheDogAPI.com/v1/images/search?breed_ids=${breedId}`;\r\n  \r\n    const res = await fetch(url);\r\n  \r\n    if (!res.ok) {\r\n      const { url, status, statusText } = res;\r\n      throw Error(`Error: ${status} ${statusText} in fetch ${url}`);\r\n    }\r\n  \r\n    const [data] = await res.json();\r\n  \r\n    let {\r\n      url: image,\r\n      breeds: [breed],\r\n    } = data;\r\n  \r\n    if (!breed) {\r\n      breed = {\r\n        id: 0,\r\n        name: \"random\",\r\n      };\r\n    }\r\n    const dog = {\r\n      image,\r\n      breed,\r\n    };\r\n    return dog;\r\n  };\r\n  \r\n  export default getDog;\r\n  ","import React, { useState, useEffect } from \"react\";\nimport Select from \"./components/Select\";\nimport Card from \"./components/Card\";\nimport getDog from \"./helpers/getDog\";\nimport Error from \"./components/Error\";\nconst initialDog = {\n  image:\n    \"\",\n  breed: {\n    id: \"0\",\n    name: \"\",\n  },\n};\nfunction App() {\n  const [dog, setdog] = useState(initialDog);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    updateDog();\n  }, []);\n\n  const updateDog = (breeId) => {\n    setLoading(true);\n    getDog(breeId)\n      .then((newdog) => {\n        setdog(newdog);\n        setLoading(false);\n      })\n      .catch((error) => {\n        \n        setError(\"Error al Cargar el Perro\");\n        console.log(error);\n        setLoading(false)\n      });\n  };\n  return (\n    <div className=\"app\">\n      <h1>Doggies</h1>\n      <Select updateDog={updateDog} />\n      {error && <Error error={error} />}\n      <Card dog={dog} updateDog={updateDog} loading={loading} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}